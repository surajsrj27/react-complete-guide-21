{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\ReactJS\\\\React-21\\\\react-next-project\\\\pages\\\\[meetupId]\\\\index.js\";\n// our-domain/meetup-id\nimport { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail'; // function MeetupDetails() {\n//     return (\n//         <MeetupDetail \n//         image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\n//         title='First Meetup'\n//         address='Some Street5, some city'\n//         description='The meetup describption'\n//         />\n//     );\n// };\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\n;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["F:/ReactJS/React-21/react-next-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA;AAGA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQN,a;AASR;;AAuCD,eAAeA,aAAf","sourcesContent":["// our-domain/meetup-id\r\nimport { MongoClient } from 'mongodb';\r\n\r\nimport { Fragment } from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\n// function MeetupDetails() {\r\n//     return (\r\n//         <MeetupDetail \r\n//         image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\r\n//         title='First Meetup'\r\n//         address='Some Street5, some city'\r\n//         description='The meetup describption'\r\n//         />\r\n//     );\r\n// };\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail \r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n        />\r\n    );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString() },\r\n        }))\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    \r\n    const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}